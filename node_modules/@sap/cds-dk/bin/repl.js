module.exports = Object.assign (repl, { options: [], help: `
# SYNOPSIS

    *cds r | repl*

    Launches into a read-eval-print-loop, an interactive playground to
    experiment with cds' JavaScript APIs. See documentation of Node.js'
    REPL for details at _http://nodejs.org/api/repl.html_

# SEE ALSO

    *cds eval*  to evaluate and execute JavaScript.
`})

async function repl (_, options={}) {

  const cds = require('../lib/cds')
  console.log('\x1b[32m\x1b[1m'+'Welcome to cds repl v', cds.version, '\x1b[0m')

  const { inspect } = require('util')
  inspect.defaultOptions.colors = true
  inspect.defaultOptions.depth = 11


  const repl = require('repl').start ({
    ...options, ignoreUndefined: true,
    writer: o => {
      if (!o || typeof o !== 'object') return o
      return inspect(o).replace(/\[Object: null prototype\] /g, '')
    }
  })

  Object.defineProperty (cds,'repl',{value:repl})
  cds.lazify (Object.assign (repl.context,{ cds,
    Foo: lazy => new cds.entity ({name:'Foo'}),
    Bar: lazy => new cds.entity ({name:'Bar'}),
  }))

  repl.history = new Array(222)
  const home = process.env.HOME || process.env.USERPROFILE
  const history = require('path').join(home,'.cds-repl-history')
  const fs = require('fs')
  fs.readFile(history, 'utf-8', (e, txt) => e || Object.assign(repl.history, txt.split('\n')))
  repl.on('exit', () => fs.writeFile(history, repl.history.join('\n'), () => {}))

  process.on('uncaughtException', console.error)
  process.on('unhandledRejection', console.error)

}

if (!module.parent) repl()
