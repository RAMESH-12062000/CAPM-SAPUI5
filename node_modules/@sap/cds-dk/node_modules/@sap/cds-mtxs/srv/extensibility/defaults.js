const cds = require('@sap/cds/lib')
const resolveViews = require('./views')
const builtin = cds.builtin.types
const needsQuotes = Symbol()
builtin.string[needsQuotes] = true
builtin.date[needsQuotes] = true

const handleDefaults = async (extension, { definitions }, checkDb = true) => {
  const target = definitions[extension.extend]
  const entity = resolveViews(target)
  if (checkDb && target !== entity) return // only db entities

  const elements = extension.elements
  const defaults = Object.keys(elements)
    .filter(key => elements[key].default)
    .map(key => {
      const e = elements[key],
        { val } = e.default
      const t = definitions[e.type] || builtin[e.type]
      return `"${key}":${t && t[needsQuotes] ? `"${val}"` : val}`
    })

  if (defaults.length) {
    const newDefaults = defaults.join(',')
    const newBagpack = `extensions__ = CASE
      WHEN extensions__ is null THEN '{${newDefaults}}'
      ELSE '{${newDefaults},' || substr(extensions__, 2, length(extensions__)-1)
    END`
    await Promise.all([UPDATE(entity).with(newBagpack), entity.drafts && UPDATE(entity.drafts).with(newBagpack)])
    // NOTE: We don't need the model definitions for `entity` in cds.db.model to run these queries
  }
}

module.exports = handleDefaults
