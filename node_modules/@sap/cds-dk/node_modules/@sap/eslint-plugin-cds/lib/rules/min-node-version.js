const path = require('path')
const semver = require('semver')

module.exports = {
  meta: {
    schema: [{/* to avoid deprecation warning for ESLint 9 */}],
    docs: {
      description: 'Checks whether the minimum Node.js version required by `@sap/cds` is achieved.'
    },
    severity: 'off',
    type: 'problem',
    model: 'none'
  },
  create: function (context) {
    return checkMinNodeVersion

    function checkMinNodeVersion () {
      const e = context.getEnvironment()
      let nodeVersion, nodeVersionCDS
      if (!e) {
        // Get current and required node versions
        try {
          const CDSPath = require.resolve('@sap/cds/package.json', {
            paths: [path.dirname('.')]
          })
          const jsonCDS = require(CDSPath)
          nodeVersion = process.version
          nodeVersionCDS = jsonCDS.engines.node
        } catch (err) {
          // Do not throw
        }
      } else {
        nodeVersion = e.nodeVersion
        nodeVersionCDS = e.nodeVersionCDS
      }
      if (
        nodeVersion &&
        nodeVersionCDS &&
        !semver.satisfies(nodeVersion, nodeVersionCDS, { loose: true })
      ) {
        context.report({
          message: `CDS minimum node version of ${nodeVersionCDS} required, found ${nodeVersion}!`,
          node: context.getNode()
        })
      }
    }
  }
}
