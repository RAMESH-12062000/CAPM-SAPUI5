
import { Linter, Rule, RuleTester, SourceCode } from "eslint";

export interface CDSRuleContext extends Rule.RuleContext {
    cds: any;
    rootPath: string;
    code: string;
    filePath: string;
    options: [];
    id: string;
    sourcecode: SourceCode;
    getModel: function;
    report: (CDSRuleReport) => void;
    err: Error;
}

export interface Rule {
    meta: RuleMetaData,
    create: (context: CDSRuleContext) => void;
}

export interface CDSRuleMetaData extends Rule.RuleMetaData {
    model?: "parsed" | "inferred" | "none";
}

export type CDSRuleReport = Rule.ReportDescriptor & {
    loc?: Rule.ReportDescriptorLocation;
    file?: string;
};

export interface CDSTestCaseError extends RuleTester.TestCaseError {
    message: string | RegExp;
}

export interface CDSRuleTestOpts {
    /** specifies __dirname */
    root: string;
    /** requires your rule .js here */
    rule?: string;
    /** filename ('schema.cds' for model, 'package.json' for env) */
    filename: string;
    /** resolves cds parser path */
    parser?: string;
    /** list of errors from ESLint's [RuleTester](https://eslint.org/docs/developer-guide/nodejs-api#ruletester) */
    errors: CDSTestCaseError[]
}
