const cds = require('../cds')
const DEBUG = cds.debug('cli|build')

module.exports = new (class Plugins {
    constructor() {
        this._plugins = new Map()
    }
    get plugins() {
        return this._plugins
    }
    register(id, plugin) {
        if (!id || !plugin) {
            throw Error("Invalid parameter")
        }
        if (plugin.impl) {
            // REVISIT: remove compat mode - latest cds-dk@8
            const taskDefaults = plugin.taskDefaults
            plugin = this._loadPlugin(id, plugin.impl)
            plugin.taskDefaults = taskDefaults
        }
        if (this._plugins.has(id)) {
            throw Error(`Build plugin ${id} already registered`)
        }
        DEBUG?.(`Registering build plugin ${id}`)
        this._plugins.set(id, plugin)
    }
    _loadPlugin(id, impl) {
        try {
            // project-local module is preferred - otherwise from our own dependencies
            return require(require.resolve(impl, { paths: [cds.root, __dirname] }))
        } catch (e) {
            throw new Error(`Custom build plugin implementation '${impl}' for '${id}' cannot be loaded:\n` + e)
        }
    }
})