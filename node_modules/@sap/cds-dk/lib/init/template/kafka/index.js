const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { srv4, kafkaMessaging } = require('../../registries/mta')
const mvn = require('../../mvn')

module.exports = class KafkaTemplate extends require('../../plugin') {

  static hasInProduction(env) {
    return !!(env.requires?.messaging?.kind === 'kafka')
  }

  async run() {
    const project = readProject()
    const { configFile, isNodejs, isJava } = project
    if (isNodejs) await merge(__dirname, 'files/package.json.hbs').into(configFile, { with: project })
    if (isJava) await mvn.add('kafka')
  }

  async combine() {
    const project = readProject()
    const { hasMta, srvPath, hasHelm, hasHelmUnifiedRuntime } = project

    if (hasMta) {
      const srv = srv4(srvPath)
      await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', {
          project,
          additions: [srv, kafkaMessaging],
          relationships: [{
              insert: [kafkaMessaging, 'name'],
              into: [srv, 'requires', 'name']
          }]
      })
    }

    if (hasHelm || hasHelmUnifiedRuntime) {
      await merge(__dirname, 'files/values.yaml').into('chart/values.yaml')
    }
  }
}
